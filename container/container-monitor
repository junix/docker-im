#!/usr/bin/env python
import sys
import time
import logging
import getopt
import utils
from container import Container
import subprocess


def existed_containers():
    cmd = 'docker ps -a'
    out = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE).stdout.read()
    output = out.decode('utf8').split('\n')
    title = output[0]
    names_offset = title.index('NAMES')
    return [c[names_offset:] for c in output[1:] if c]


def monitored_containers():
    with open(conf, 'r') as f:
        for line in f:
            cname = line.strip()
            if cname:
                yield cname


if __name__ == '__main__':
    log = logging.getLogger(__name__)
    optlist, args = getopt.getopt(sys.argv[1:], 'c:', [])
    options = dict(optlist)
    conf = '/etc/container-monitor.conf'
    if options.get('-c'):
        conf = options.get('-c')
    while True:
        time.sleep(20)
        ecs = set(existed_containers())
        mcs = set(monitored_containers())
        for c in mcs.difference(ecs):
            log.error('%r is not existed' % c)
        for c in mcs.intersection(ecs):
            container = Container(c)
            if not container.is_running():
                log.error('%r is not running:%r' % (container, container.status()))
                container.release_ip()
                container.start()
                time.sleep(20)


